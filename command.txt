GIT COMMANDS

1.	cd <file path> - It will return the path to a local folder on your computer's disk.
2.	git status - The git status command displays the state of the working directory and the staging area.
3.	git add <File name> - When you get to know which files are not added by typing git status. Then type git add <file name> to add files.
4.	git clean - Removes untracked files from the working directory. This is the logical counterpart to git reset, which (typically) only operates on tracked files.
5.	git config - A convenient way to set configuration options for your Git installation. Youâ€™ll typically only need to use this immediately after installing Git on a new development machine.
6.	git fetch - Fetching downloads a branch from another repository, along with all of its associated commits and files. But, it doesn't try to integrate anything into your local repository. This gives you a chance to inspect changes before merging them with your project.
7.	git init - Initializes a new Git repository. If you want to place a project under revision control, this is the first command you need to learn.
8.	git log - Lets you explore the previous revisions of a project. It provides several formatting options for displaying committed snapshots.
9.	git rebase - Rebasing lets you move branches around, which helps you avoid unnecessary merge commits. The resulting linear history is often much easier to understand and explore.
10.	git reflog - Git keeps track of updates to the tip of branches using a mechanism called reflog. This allows you to go back to changesets even though they are not referenced by any branch or tag.

Added by Shubham Joshi

